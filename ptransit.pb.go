// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ptransit.proto

package proto_ptransit // import "github.com/synerex/proto_ptransit"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import duration "github.com/golang/protobuf/ptypes/duration"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PTService struct {
	OperatorId           int32              `protobuf:"varint,1,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	LineId               int32              `protobuf:"varint,2,opt,name=line_id,json=lineId,proto3" json:"line_id,omitempty"`
	PastStationId        int32              `protobuf:"varint,3,opt,name=past_station_id,json=pastStationId,proto3" json:"past_station_id,omitempty"`
	StationGroupId       int32              `protobuf:"varint,4,opt,name=station_group_id,json=stationGroupId,proto3" json:"station_group_id,omitempty"`
	NextStationId        int32              `protobuf:"varint,5,opt,name=next_station_id,json=nextStationId,proto3" json:"next_station_id,omitempty"`
	NextStationName      string             `protobuf:"bytes,6,opt,name=next_station_name,json=nextStationName,proto3" json:"next_station_name,omitempty"`
	VehicleId            int32              `protobuf:"varint,7,opt,name=vehicle_id,json=vehicleId,proto3" json:"vehicle_id,omitempty"`
	Angle                float32            `protobuf:"fixed32,8,opt,name=angle,proto3" json:"angle,omitempty"`
	Speed                int32              `protobuf:"varint,9,opt,name=speed,proto3" json:"speed,omitempty"`
	DelayTime            *duration.Duration `protobuf:"bytes,13,opt,name=delay_time,json=delayTime,proto3" json:"delay_time,omitempty"`
	VehicleType          int32              `protobuf:"varint,14,opt,name=vehicle_type,json=vehicleType,proto3" json:"vehicle_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *PTService) Reset()         { *m = PTService{} }
func (m *PTService) String() string { return proto.CompactTextString(m) }
func (*PTService) ProtoMessage()    {}
func (*PTService) Descriptor() ([]byte, []int) {
	return fileDescriptor_ptransit_71d030661bf9e7ef, []int{0}
}
func (m *PTService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PTService.Unmarshal(m, b)
}
func (m *PTService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PTService.Marshal(b, m, deterministic)
}
func (dst *PTService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PTService.Merge(dst, src)
}
func (m *PTService) XXX_Size() int {
	return xxx_messageInfo_PTService.Size(m)
}
func (m *PTService) XXX_DiscardUnknown() {
	xxx_messageInfo_PTService.DiscardUnknown(m)
}

var xxx_messageInfo_PTService proto.InternalMessageInfo

func (m *PTService) GetOperatorId() int32 {
	if m != nil {
		return m.OperatorId
	}
	return 0
}

func (m *PTService) GetLineId() int32 {
	if m != nil {
		return m.LineId
	}
	return 0
}

func (m *PTService) GetPastStationId() int32 {
	if m != nil {
		return m.PastStationId
	}
	return 0
}

func (m *PTService) GetStationGroupId() int32 {
	if m != nil {
		return m.StationGroupId
	}
	return 0
}

func (m *PTService) GetNextStationId() int32 {
	if m != nil {
		return m.NextStationId
	}
	return 0
}

func (m *PTService) GetNextStationName() string {
	if m != nil {
		return m.NextStationName
	}
	return ""
}

func (m *PTService) GetVehicleId() int32 {
	if m != nil {
		return m.VehicleId
	}
	return 0
}

func (m *PTService) GetAngle() float32 {
	if m != nil {
		return m.Angle
	}
	return 0
}

func (m *PTService) GetSpeed() int32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *PTService) GetDelayTime() *duration.Duration {
	if m != nil {
		return m.DelayTime
	}
	return nil
}

func (m *PTService) GetVehicleType() int32 {
	if m != nil {
		return m.VehicleType
	}
	return 0
}

type PTgtfs struct {
	GtfsName             string   `protobuf:"bytes,1,opt,name=gtfs_name,json=gtfsName,proto3" json:"gtfs_name,omitempty"`
	Gtfs                 []byte   `protobuf:"bytes,2,opt,name=gtfs,proto3" json:"gtfs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PTgtfs) Reset()         { *m = PTgtfs{} }
func (m *PTgtfs) String() string { return proto.CompactTextString(m) }
func (*PTgtfs) ProtoMessage()    {}
func (*PTgtfs) Descriptor() ([]byte, []int) {
	return fileDescriptor_ptransit_71d030661bf9e7ef, []int{1}
}
func (m *PTgtfs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PTgtfs.Unmarshal(m, b)
}
func (m *PTgtfs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PTgtfs.Marshal(b, m, deterministic)
}
func (dst *PTgtfs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PTgtfs.Merge(dst, src)
}
func (m *PTgtfs) XXX_Size() int {
	return xxx_messageInfo_PTgtfs.Size(m)
}
func (m *PTgtfs) XXX_DiscardUnknown() {
	xxx_messageInfo_PTgtfs.DiscardUnknown(m)
}

var xxx_messageInfo_PTgtfs proto.InternalMessageInfo

func (m *PTgtfs) GetGtfsName() string {
	if m != nil {
		return m.GtfsName
	}
	return ""
}

func (m *PTgtfs) GetGtfs() []byte {
	if m != nil {
		return m.Gtfs
	}
	return nil
}

func init() {
	proto.RegisterType((*PTService)(nil), "ptransit.PTService")
	proto.RegisterType((*PTgtfs)(nil), "ptransit.PTgtfs")
}

func init() { proto.RegisterFile("ptransit.proto", fileDescriptor_ptransit_71d030661bf9e7ef) }

var fileDescriptor_ptransit_71d030661bf9e7ef = []byte{
	// 365 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x92, 0x5f, 0xcb, 0xd3, 0x30,
	0x14, 0xc6, 0xe9, 0xfb, 0xbe, 0xeb, 0xd6, 0xb3, 0x7f, 0x1a, 0x04, 0xab, 0xa2, 0x76, 0x13, 0xa4,
	0x78, 0xd1, 0x81, 0xde, 0xe8, 0xad, 0x08, 0xd2, 0x1b, 0x19, 0x5d, 0xaf, 0xbc, 0x29, 0xd9, 0x72,
	0xd6, 0x05, 0xda, 0x26, 0xa4, 0xe9, 0x58, 0x3f, 0x87, 0x5f, 0x58, 0x92, 0xb4, 0xe8, 0xae, 0x96,
	0xe7, 0x97, 0x1f, 0x0f, 0x3b, 0x27, 0x85, 0x95, 0xd4, 0x8a, 0x36, 0x2d, 0xd7, 0x89, 0x54, 0x42,
	0x0b, 0x32, 0x1b, 0xf3, 0xeb, 0x77, 0xa5, 0x10, 0x65, 0x85, 0x3b, 0xcb, 0x8f, 0xdd, 0x79, 0xc7,
	0x3a, 0x45, 0x35, 0x17, 0x8d, 0x33, 0xb7, 0x7f, 0x1e, 0x21, 0xd8, 0xe7, 0x07, 0x54, 0x57, 0x7e,
	0x42, 0xf2, 0x1e, 0xe6, 0x42, 0xa2, 0xa2, 0x5a, 0xa8, 0x82, 0xb3, 0xd0, 0x8b, 0xbc, 0x78, 0x92,
	0xc1, 0x88, 0x52, 0x46, 0x5e, 0xc2, 0xb4, 0xe2, 0x0d, 0x9a, 0xcb, 0x07, 0x7b, 0xe9, 0x9b, 0x98,
	0x32, 0xf2, 0x11, 0xd6, 0x92, 0xb6, 0xba, 0x68, 0xb5, 0x6d, 0x37, 0xc2, 0xa3, 0x15, 0x96, 0x06,
	0x1f, 0x1c, 0x4d, 0x19, 0x89, 0xe1, 0xd9, 0xa8, 0x94, 0x4a, 0x74, 0xd2, 0x88, 0x4f, 0x56, 0x5c,
	0x0d, 0xfc, 0xa7, 0xc1, 0xae, 0xb1, 0xc1, 0xdb, 0x5d, 0xe3, 0xc4, 0x35, 0x1a, 0xfc, 0xaf, 0xf1,
	0x13, 0x3c, 0xbf, 0xf3, 0x1a, 0x5a, 0x63, 0xe8, 0x47, 0x5e, 0x1c, 0x64, 0xeb, 0xff, 0xcc, 0x5f,
	0xb4, 0x46, 0xf2, 0x16, 0xe0, 0x8a, 0x17, 0x7e, 0xaa, 0xec, 0x04, 0x53, 0x5b, 0x17, 0x0c, 0x24,
	0x65, 0xe4, 0x05, 0x4c, 0x68, 0x53, 0x56, 0x18, 0xce, 0x22, 0x2f, 0x7e, 0xc8, 0x5c, 0x30, 0xb4,
	0x95, 0x88, 0x2c, 0x0c, 0xac, 0xef, 0x02, 0xf9, 0x0a, 0xc0, 0xb0, 0xa2, 0x7d, 0xa1, 0x79, 0x8d,
	0xe1, 0x32, 0xf2, 0xe2, 0xf9, 0xe7, 0x57, 0x89, 0xdb, 0x76, 0x32, 0x6e, 0x3b, 0xf9, 0x31, 0x6c,
	0x3b, 0x0b, 0xac, 0x9c, 0xf3, 0x1a, 0xc9, 0x06, 0x16, 0xe3, 0x9f, 0xd0, 0xbd, 0xc4, 0x70, 0x65,
	0x6b, 0xe7, 0x03, 0xcb, 0x7b, 0x89, 0xdb, 0x6f, 0xe0, 0xef, 0xf3, 0x52, 0x9f, 0x5b, 0xf2, 0x06,
	0x02, 0xf3, 0xeb, 0xa6, 0xf2, 0xec, 0x54, 0x33, 0x03, 0xec, 0x38, 0x04, 0x9e, 0xcc, 0xd9, 0x3e,
	0xc5, 0x22, 0xb3, 0xe7, 0xef, 0x1f, 0x7e, 0x6f, 0x4a, 0xae, 0x2f, 0xdd, 0x31, 0x39, 0x89, 0x7a,
	0xd7, 0xf6, 0x0d, 0x2a, 0xbc, 0xb9, 0xe7, 0x2f, 0xc6, 0xaf, 0xe2, 0xe8, 0xdb, 0xfc, 0xe5, 0x6f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xab, 0xce, 0x1a, 0xdb, 0x38, 0x02, 0x00, 0x00,
}
